[{"/Users/zwe/Desktop/cah-webgame/ts-client/src/index.tsx":"1","/Users/zwe/Desktop/cah-webgame/ts-client/src/reportWebVitals.ts":"2","/Users/zwe/Desktop/cah-webgame/ts-client/src/App.tsx":"3","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Home.tsx":"4","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Room.tsx":"5","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Navbar.tsx":"6","/Users/zwe/Desktop/cah-webgame/ts-client/src/hooks/useLocalStorage.ts":"7","/Users/zwe/Desktop/cah-webgame/ts-client/src/contexts/SocketContext.ts":"8","/Users/zwe/Desktop/cah-webgame/ts-client/src/utils/index.ts":"9","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Lobby.tsx":"10","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/GameRoom.tsx":"11","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/ScoreBoard.tsx":"12","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/Whitecard.tsx":"13","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/Blackcard.tsx":"14","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/WinnerCard.tsx":"15"},{"size":500,"mtime":1612988111843,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1612988111844,"results":"18","hashOfConfig":"17"},{"size":940,"mtime":1613515163042,"results":"19","hashOfConfig":"17"},{"size":2095,"mtime":1613514913510,"results":"20","hashOfConfig":"17"},{"size":3135,"mtime":1613677842340,"results":"21","hashOfConfig":"17"},{"size":1380,"mtime":1613510172964,"results":"22","hashOfConfig":"17"},{"size":597,"mtime":1612988111843,"results":"23","hashOfConfig":"17"},{"size":214,"mtime":1612988111842,"results":"24","hashOfConfig":"17"},{"size":489,"mtime":1613435812177,"results":"25","hashOfConfig":"17"},{"size":2375,"mtime":1613683358023,"results":"26","hashOfConfig":"17"},{"size":8563,"mtime":1613683079359,"results":"27","hashOfConfig":"17"},{"size":1452,"mtime":1613683131670,"results":"28","hashOfConfig":"17"},{"size":1596,"mtime":1613634148625,"results":"29","hashOfConfig":"17"},{"size":434,"mtime":1613548404569,"results":"30","hashOfConfig":"17"},{"size":499,"mtime":1613675265194,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ce1qkj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/zwe/Desktop/cah-webgame/ts-client/src/index.tsx",[],["68","69"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/reportWebVitals.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/App.tsx",["70","71"],"import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./screens/Home\";\nimport Room from \"./screens/Room\";\nimport {SocketContext, socket} from './contexts/SocketContext';\n\nconst App = () => {\n  const [clientName, setClientName] = useState<string>(\"\");\n\n  useEffect(() => {\n    console.log(\"clientname: \", clientName);\n    return () => {\n      console.log(\"unmounting\");\n      socket.close();\n    };\n  }, []);\n\n\n  return (\n    <BrowserRouter>\n      <Switch> \n        <SocketContext.Provider value={socket}>\n          <Route path='/' exact render={(props) => <Home {...props} setClientName={setClientName}/>} />\n          <Route path='/game/:roomId' exact render={(props) => clientName ? <Room {...props}/> : <Home {...props} setClientName={setClientName}/>} />\n        </SocketContext.Provider>\n    </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Home.tsx",["72","73"],"import { useState, useEffect, useContext, useRef } from \"react\";\nimport { Navbar } from \"../components/Navbar\";\nimport { SocketContext } from \"../contexts/SocketContext\";\nimport { v4 as uuid } from 'uuid';\n\ninterface Props {\n  history: any,\n  setClientName: any,\n  match: any,\n}\n\nexport default function Home({ history, setClientName, match }: Props) {\n  const [name, setName] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const socket = useContext(SocketContext);\n  \n  useEffect(() => {\n    const roomCode = match.params.roomId;\n    if(match.params.roomId){\n      setCode(roomCode);\n    } else {\n      setCode(uuid());\n    }\n  }, []);\n\n  const handleJoin = () => {\n    if(name){\n      setLoading(true);\n\n      const clientId = uuid();\n      socket.emit(\"join room\", {\n        roomCode: code,\n        clientName: name,\n        clientId: clientId,\n      });\n\n      setTimeout(() => {\n        history.push(\"/game/\" + code, { clientId });\n        setClientName(name);\n      }, 2000);\n    } else {\n      alert(\"Please fill in your name.\")\n    }\n    \n  };\n\n\n  if (isLoading) {\n    return (\n      <>\n        <p className=\"font-extrabold\">Loading...</p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"grid place-items-center w-screen h-screen\">\n        <div>\n          <div className=\"max-w-md bg-white border-2 border-gray-300 p-6 rounded-md tracking-wide shadow-lg\">\n            <input\n              className=\"rounded-sm px-4 py-3 mt-3 focus:outline-none bg-gray-100 w-full\"\n              type=\"text\"\n              placeholder=\"Your Name\"\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n            <div className=\"grid grid-flow-col mt-3\">\n              <button\n                className=\"bg-yellow-500 hover:bg-yellow-300 text-black font-bold h-10 rounded-full\"\n                onClick={handleJoin}\n              >\n                Join Room\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Room.tsx",["74","75","76","77","78"],"import { useState, useEffect, useContext, useRef } from \"react\";\nimport Lobby from \"../components/Lobby\";\nimport { SocketContext } from \"../contexts/SocketContext\";\nimport GameRoom from \"../game/ui/GameRoom\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { User, Setting, Player, BlackCard, WhiteCard } from \"../interfaces\";\n\ninterface Props {\n  history: any;\n  match: any;\n}\n\nvar defaultSetting: Setting = {\n  rounds: 3,\n};\n\nexport default function Room({ match, history }: Props) {\n  const roomCode = match.params.roomId;\n  const [users, setUsers] = useLocalStorage(`room-Users-${roomCode}`, []);\n  const [hostUser, setHostUser] = useLocalStorage(\n    `host-User-${roomCode}`,\n    undefined\n  );\n  const [currentUser, setCurrentUser] = useLocalStorage(\n    `current-User-${history.location.state.clientId}`,\n    undefined\n  );\n  const [lastJoined, setLastJoined] = useState<number | null>(null);\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n  const [setting, changeSetting] = useState<Setting>(defaultSetting);\n  const settingRef = useRef(defaultSetting);\n  settingRef.current = setting;\n  \n  const socket = useContext(SocketContext);\n\n  useEffect(() => {\n    socket.emit(\"get room users\", {\n      roomCode: roomCode,\n    });\n    socket.emit(\"get room setting\", { roomCode: roomCode });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"room status\", ({ clients }: { clients: User[] }) => {\n      console.log(`Clients: `, clients);\n      setUsers(clients);\n      if (clients.length !== 0) {\n        setLastJoined(clients.length - 1);\n        setHostUser(clients[0]);\n        var id: string | undefined = history.location.state.clientId;\n        setCurrentUser(clients.find((client) => client.id === id));\n      }\n    });\n  }, [users]);\n\n  useEffect(() => {\n    socket.on(\"setting update\", ({ settings }: { settings: Setting }) => {\n      if (hostUser && currentUser) {\n        if (hostUser.id !== currentUser.id) {\n          changeSetting(settings);\n        }\n      }\n    });\n    socket.on(\"game start update\", () => {\n      setGameStarted(true);\n    });\n  });\n\n  const handleSetting = (e: any) => {\n    const { name, value } = e.target;\n    const parse_value = parseInt(value);\n    changeSetting((prevState) => ({\n      ...prevState,\n      [name]: parse_value,\n    }));\n    setTimeout(() => {\n      socket.emit(\"change setting\", {\n        settings: settingRef.current,\n        roomCode: roomCode,\n      });\n    }, 500);\n  };\n\n  const handleStartGame = () => {\n    setGameStarted(true);\n    socket.emit(\"start game\", { roomCode: roomCode });\n    socket.emit(\"game state init\", { roomCode: roomCode });\n  };\n  \n\n  return (\n    <>\n      {gameStarted ? (\n        <GameRoom currentUser = {currentUser} roomCode = {roomCode} setting = {settingRef.current} history={history}/>\n      ) : (\n        <Lobby\n          setting={setting}\n          handleSetting={handleSetting}\n          players={users}\n          hostPlayer={hostUser}\n          currentPlayer={currentUser}\n          lastJoined={lastJoined}\n          handleStartGame={handleStartGame}\n          match={match}\n        />\n      )}\n    </>\n  );\n}\n","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Navbar.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/hooks/useLocalStorage.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/contexts/SocketContext.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/utils/index.ts",[],["79","80"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Lobby.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/GameRoom.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/ScoreBoard.tsx",["81"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/Whitecard.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/Blackcard.tsx",["82"],"import { BlackCard, WhiteCard } from \"../../interfaces\";\n\ninterface Props {\n  card: BlackCard;\n}\nexport default function Blackcard(props: Props) {\n  return (\n    <>\n        <div className=\"max-w-xs rounded overflow-hidden shadow-lg my-2 bg-black\">\n          <div className=\"px-6 py-4\">\n            <p className=\"text-white text-base\">\n              {props.card.content}\n            </p>\n          </div>\n        </div>\n    </>\n  );\n}\n","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/WinnerCard.tsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":40,"nodeType":"89","messageId":"90","endLine":2,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":16,"column":6,"nodeType":"93","endLine":16,"endColumn":8,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":1,"column":43,"nodeType":"89","messageId":"90","endLine":1,"endColumn":49},{"ruleId":"91","severity":1,"message":"96","line":25,"column":6,"nodeType":"93","endLine":25,"endColumn":8,"suggestions":"97"},{"ruleId":"87","severity":1,"message":"98","line":6,"column":25,"nodeType":"89","messageId":"90","endLine":6,"endColumn":31},{"ruleId":"87","severity":1,"message":"99","line":6,"column":33,"nodeType":"89","messageId":"90","endLine":6,"endColumn":42},{"ruleId":"87","severity":1,"message":"100","line":6,"column":44,"nodeType":"89","messageId":"90","endLine":6,"endColumn":53},{"ruleId":"91","severity":1,"message":"101","line":41,"column":6,"nodeType":"93","endLine":41,"endColumn":8,"suggestions":"102"},{"ruleId":"91","severity":1,"message":"103","line":54,"column":6,"nodeType":"93","endLine":54,"endColumn":13,"suggestions":"104"},{"ruleId":"83","replacedBy":"105"},{"ruleId":"85","replacedBy":"106"},{"ruleId":"91","severity":1,"message":"107","line":12,"column":3,"nodeType":"89","endLine":12,"endColumn":12,"suggestions":"108"},{"ruleId":"87","severity":1,"message":"100","line":1,"column":21,"nodeType":"89","messageId":"90","endLine":1,"endColumn":30},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clientName'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.roomId'. Either include it or remove the dependency array.",["112"],"'Player' is defined but never used.","'BlackCard' is defined but never used.","'WhiteCard' is defined but never used.","React Hook useEffect has missing dependencies: 'roomCode' and 'socket'. Either include them or remove the dependency array.",["113"],"React Hook useEffect has missing dependencies: 'history.location.state.clientId', 'setCurrentUser', 'setHostUser', 'setUsers', and 'socket'. Either include them or remove the dependency array.",["114"],["109"],["110"],"React Hook useEffect contains a call to 'setGameWinner'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.gameOver, props.players] as a second argument to the useEffect Hook.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [clientName]",{"range":"126","text":"127"},"Update the dependencies array to be: [match.params.roomId]",{"range":"128","text":"129"},"Update the dependencies array to be: [roomCode, socket]",{"range":"130","text":"131"},"Update the dependencies array to be: [history.location.state.clientId, setCurrentUser, setHostUser, setUsers, socket, users]",{"range":"132","text":"133"},"Add dependencies array: [props.gameOver, props.players]",{"range":"134","text":"135"},[487,489],"[clientName]",[694,696],"[match.params.roomId]",[1332,1334],"[roomCode, socket]",[1762,1769],"[history.location.state.clientId, setCurrentUser, setHostUser, setUsers, socket, users]",[591,591],", [props.gameOver, props.players]"]