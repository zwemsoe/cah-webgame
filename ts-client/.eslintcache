[{"/Users/zwe/Desktop/cah-webgame/ts-client/src/index.tsx":"1","/Users/zwe/Desktop/cah-webgame/ts-client/src/reportWebVitals.ts":"2","/Users/zwe/Desktop/cah-webgame/ts-client/src/App.tsx":"3","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Home.tsx":"4","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Room.tsx":"5","/Users/zwe/Desktop/cah-webgame/ts-client/src/utils.ts":"6","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Navbar.tsx":"7","/Users/zwe/Desktop/cah-webgame/ts-client/src/hooks/useLocalStorage.ts":"8","/Users/zwe/Desktop/cah-webgame/ts-client/src/contexts/SocketContext.ts":"9"},{"size":500,"mtime":1612988111843,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1612988111844,"results":"12","hashOfConfig":"11"},{"size":709,"mtime":1612988111842,"results":"13","hashOfConfig":"11"},{"size":2623,"mtime":1612990053118,"results":"14","hashOfConfig":"11"},{"size":3129,"mtime":1612988111845,"results":"15","hashOfConfig":"11"},{"size":489,"mtime":1612988111845,"results":"16","hashOfConfig":"11"},{"size":1155,"mtime":1612990978867,"results":"17","hashOfConfig":"11"},{"size":597,"mtime":1612988111843,"results":"18","hashOfConfig":"11"},{"size":214,"mtime":1612988111842,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ce1qkj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/zwe/Desktop/cah-webgame/ts-client/src/index.tsx",[],["40","41"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/reportWebVitals.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/App.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Home.tsx",["42"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Room.tsx",["43","44","45"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {SocketContext} from \"../contexts/SocketContext\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport {User} from \"../interfaces\";\n\ninterface Props {\n  history: any,\n  match: any,\n}\n\nexport default function Room({ match, history } : Props) {\n  const roomCode = match.params.roomId;\n  const [players, setPlayers] = useLocalStorage(`room-players-${roomCode}`, []);\n  const [hostPlayer, setHostPlayer] = useLocalStorage(`host-player-${roomCode}`, undefined);\n  const [currentPlayer, setCurrentPlayer] = useLocalStorage(`current-player-${history.location.state.clientId}`, undefined);;\n  const [lastJoined, setLastJoined] = useState<number | null>(null);\n  const socket = useContext(SocketContext);\n  \n\n  useEffect(() => {\n    console.log(\"This runs again after reload\")\n    console.log(\"Socket\", socket)\n    socket && socket.emit(\"get room users\", {\n      roomCode: roomCode,\n    });\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Socket\", socket)\n    console.log(\"Players\", players)\n    socket && socket.on(\"room status\", ({ clients } : {clients: User[]}) => {\n      console.log(`Clients: `, clients);\n      setPlayers(clients);\n      if(clients.length !== 0){\n        setLastJoined(clients.length-1);\n        setHostPlayer(clients[0]);\n        var id: string | undefined = history.location.state.clientId;\n        setCurrentPlayer(clients.find((client) => client.id === id));\n      }\n    });\n  }, [players]);\n\n  \n\n  const renderStartGameBtn = () => {\n    if(hostPlayer && currentPlayer){\n        if(hostPlayer.id === currentPlayer.id){\n          return (\n          <div> \n            <a className = \"btn btn-warning\">\n              Start Game\n            </a>\n          </div>\n          )\n        }\n    }\n  }\n\n\n  return (\n    <>\n      <h1>{lastJoined !== null && players[lastJoined].name + \" joined.\" }</h1>\n      <h1>Players List:</h1>\n      <ul>\n        { players.map((player:any, i:number) => {\n          return <li key={i}>{player.name} {(hostPlayer && hostPlayer.id) === player.id && \"(Host)\"}</li>\n        })}\n      </ul>\n\n      <div className='somespace'></div>\n      <div className='somespace'></div>\n\n      <h2>Settings</h2>\n      <label htmlFor=\"rounds-select\">Number of Rounds:</label>\n      <select className=\"form-select\" name=\"rounds-select\">\n        <option value=\"3\" selected>3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n      </select>\n\n      <label htmlFor=\"judge-select\">Judge Time:</label>\n      <select className=\"form-select\" name=\"judge-select\">\n        <option value=\"60\" selected>60s</option>\n        <option value=\"90\">90s</option>\n        <option value=\"120\">120s</option>\n      </select>\n\n      <label htmlFor=\"pick-select\">Pick Time:</label>\n      <select className=\"form-select\" name=\"pick-select\">\n        <option value=\"60\" selected>60s</option>\n        <option value=\"90\">90s</option>\n        <option value=\"120\">120s</option>\n      </select>\n      \n      <div className='somespace'></div>\n      <div className='somespace'></div>\n      {renderStartGameBtn()}\n    </>\n  );\n}\n","/Users/zwe/Desktop/cah-webgame/ts-client/src/utils.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Navbar.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/hooks/useLocalStorage.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/contexts/SocketContext.ts",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":14,"column":10,"nodeType":"52","messageId":"53","endLine":14,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":26,"column":6,"nodeType":"56","endLine":26,"endColumn":8,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":41,"column":6,"nodeType":"56","endLine":41,"endColumn":15,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":50,"column":13,"nodeType":"62","endLine":50,"endColumn":46},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'randomCode' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'roomCode' and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has missing dependencies: 'history.location.state.clientId', 'setCurrentPlayer', 'setHostPlayer', 'setPlayers', and 'socket'. Either include them or remove the dependency array.",["66"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [roomCode, socket]",{"range":"71","text":"72"},"Update the dependencies array to be: [history.location.state.clientId, players, setCurrentPlayer, setHostPlayer, setPlayers, socket]",{"range":"73","text":"74"},[968,970],"[roomCode, socket]",[1479,1488],"[history.location.state.clientId, players, setCurrentPlayer, setHostPlayer, setPlayers, socket]"]