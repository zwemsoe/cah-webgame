[{"/Users/zwe/Desktop/cah-webgame/ts-client/src/index.tsx":"1","/Users/zwe/Desktop/cah-webgame/ts-client/src/reportWebVitals.ts":"2","/Users/zwe/Desktop/cah-webgame/ts-client/src/App.tsx":"3","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Home.tsx":"4","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Room.tsx":"5","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Navbar.tsx":"6","/Users/zwe/Desktop/cah-webgame/ts-client/src/hooks/useLocalStorage.ts":"7","/Users/zwe/Desktop/cah-webgame/ts-client/src/contexts/SocketContext.ts":"8","/Users/zwe/Desktop/cah-webgame/ts-client/src/utils/index.ts":"9"},{"size":500,"mtime":1612988111843,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1612988111844,"results":"12","hashOfConfig":"11"},{"size":935,"mtime":1613466981287,"results":"13","hashOfConfig":"11"},{"size":2007,"mtime":1613467670592,"results":"14","hashOfConfig":"11"},{"size":5476,"mtime":1613462813522,"results":"15","hashOfConfig":"11"},{"size":1380,"mtime":1613118142898,"results":"16","hashOfConfig":"11"},{"size":597,"mtime":1612988111843,"results":"17","hashOfConfig":"11"},{"size":214,"mtime":1612988111842,"results":"18","hashOfConfig":"11"},{"size":489,"mtime":1613435812177,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ce1qkj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/zwe/Desktop/cah-webgame/ts-client/src/index.tsx",[],["41","42"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/reportWebVitals.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/App.tsx",["43","44"],"import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./screens/Home\";\nimport Room from \"./screens/Room\";\nimport {SocketContext, socket} from './contexts/SocketContext';\n\nconst App = () => {\n  const [clientName, setClientName] = useState<string>(\"\");\n\n  useEffect(() => {\n    console.log(\"clientname: \", clientName);\n    return () => {\n      console.log(\"unmounting\");\n      socket.close();\n    };\n  }, []);\n\n\n  return (\n    <BrowserRouter>\n      <Switch> \n        <SocketContext.Provider value={socket}>\n          <Route path='/' exact render={(props) => <Home {...props} setClientName={setClientName}/>} />\n          <Route path='/:roomId' exact render={(props) => clientName ? <Room {...props}/> : <Home {...props} setClientName={setClientName}/>} />\n        </SocketContext.Provider>\n    </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Home.tsx",["45","46"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Room.tsx",["47","48","49"],"import { settings } from \"cluster\";\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport { SocketContext } from \"../contexts/SocketContext\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { User, Setting } from \"../interfaces\";\n\ninterface Props {\n  history: any;\n  match: any;\n}\n\nvar defaultSetting: Setting = {\n  rounds: 3,\n  judgeTime: 60,\n  pickTime: 60,\n}\n\nexport default function Room({ match, history }: Props) {\n  const roomCode = match.params.roomId;\n  const [players, setPlayers] = useLocalStorage(`room-players-${roomCode}`, []);\n  const [hostPlayer, setHostPlayer] = useLocalStorage(\n    `host-player-${roomCode}`,\n    undefined\n  );\n  const [currentPlayer, setCurrentPlayer] = useLocalStorage(\n    `current-player-${history.location.state.clientId}`,\n    undefined\n  );\n  const [lastJoined, setLastJoined] = useState<number | null>(null);\n  const [setting, changeSetting] = useState<Setting>(defaultSetting);\n  const settingRef = useRef(defaultSetting);\n  settingRef.current = setting;\n\n  const socket = useContext(SocketContext);\n\n  useEffect(() => {\n    socket.emit(\"get room users\", {\n      roomCode: roomCode,\n    });\n    socket.emit(\"get room setting\", { roomCode: roomCode });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"room status\", ({ clients }: { clients: User[] }) => {\n      console.log(`Clients: `, clients);\n      setPlayers(clients);\n      if (clients.length !== 0) {\n        setLastJoined(clients.length - 1);\n        setHostPlayer(clients[0]);\n        var id: string | undefined = history.location.state.clientId;\n        setCurrentPlayer(clients.find((client) => client.id === id));\n      }\n    });\n  }, [players]);\n\n  useEffect(() => {\n    socket.on(\"setting update\", ({ settings }: { settings: Setting }) => {\n      if (hostPlayer && currentPlayer) {\n        if (hostPlayer.id !== currentPlayer.id) {\n          changeSetting(settings);\n        }\n      }\n    });\n  });\n\n  const handleSetting = (e: any) => {\n    const { name, value } = e.target;\n    const parse_value = parseInt(value);\n    changeSetting((prevState) => ({\n      ...prevState,\n      [name]: parse_value,\n    }));\n    setTimeout(() => {\n      socket.emit(\"change setting\", { settings: settingRef.current, roomCode: roomCode });\n    }, 500)\n  }\n\n\n  const renderSettings = () => {\n    if (hostPlayer && currentPlayer) {\n      if (hostPlayer.id === currentPlayer.id) {\n        return (\n          <div>\n            <label htmlFor=\"rounds-select\" className=\"mr-5\">\n              Number of Rounds:\n            </label>\n            <select\n              className=\"w-auto border bg-white rounded px-3 py-2 outline-none\"\n              name=\"rounds\"\n              value={setting.rounds}\n              onChange={handleSetting}\n            >\n              <option value=\"3\">\n                3\n              </option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n            <br />\n\n            <label htmlFor=\"judge-select\" className=\"mr-5\">\n              Judge Time:\n            </label>\n            <select\n              className=\"w-auto border bg-white rounded px-3 py-2 outline-none\"\n              name=\"judgeTime\"\n              value={setting.judgeTime}\n              onChange={handleSetting}\n            >\n              <option value=\"60\">\n                60s\n              </option>\n              <option value=\"90\">90s</option>\n              <option value=\"120\">120s</option>\n            </select>\n            <br />\n\n            <label htmlFor=\"pick-select\" className=\"mr-5\">\n              Pick Time:\n            </label>\n            <select\n              className=\"w-auto border bg-white rounded px-3 py-2 outline-none mb-2\"\n              name=\"pickTime\"\n              value={setting.pickTime}\n              onChange={handleSetting}\n            >\n              <option value=\"60\">\n                60s\n              </option>\n              <option value=\"90\">90s</option>\n              <option value=\"120\">120s</option>\n            </select>\n            <br />\n            <button className=\"bg-yellow-500 hover:bg-yellow-300 text-black font-bold h-10 w-28 rounded\"\n              onClick= {() => {\n                \n              }}\n            >\n              Start Game\n            </button>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <label htmlFor=\"rounds-select\" className=\"mr-5\">\n              Number of Rounds:\n            </label>\n            <p>{setting.rounds}</p>\n            <br />\n\n            <label htmlFor=\"judge-select\" className=\"mr-5\">\n              Judge Time:\n            </label>\n            <p>{setting.judgeTime}s</p>\n            <br />\n\n            <label htmlFor=\"pick-select\" className=\"mr-5\">\n              Pick Time:\n            </label>\n            <p>{setting.pickTime}s</p>\n            <br />\n          </div>\n        );\n      }\n    }\n  };\n\n  return (\n    <>\n      <p className=\"font-extrabold\">\n        {lastJoined !== null && players[lastJoined].name + \" joined.\"}\n      </p>\n      <p className=\"font-bold\">Players List:</p>\n      <ul className=\"mb-5\">\n        {players.map((player: any, i: number) => {\n          return (\n            <li key={i}>\n              - {player.name}{\" \"}\n              {(hostPlayer && hostPlayer.id) === player.id && \"(Host)\"}\n            </li>\n          );\n        })}\n      </ul>\n\n      <p className=\"font-bold\">Settings</p>\n      {renderSettings()}\n    </>\n  );\n}\n","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Navbar.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/hooks/useLocalStorage.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/contexts/SocketContext.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/utils/index.ts",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":40,"nodeType":"56","messageId":"57","endLine":2,"endColumn":48},{"ruleId":"58","severity":1,"message":"59","line":16,"column":6,"nodeType":"60","endLine":16,"endColumn":8,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":1,"column":43,"nodeType":"56","messageId":"57","endLine":1,"endColumn":49},{"ruleId":"58","severity":1,"message":"63","line":25,"column":6,"nodeType":"60","endLine":25,"endColumn":8,"suggestions":"64"},{"ruleId":"54","severity":1,"message":"65","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":41,"column":6,"nodeType":"60","endLine":41,"endColumn":8,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"68","line":54,"column":6,"nodeType":"60","endLine":54,"endColumn":15,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clientName'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.roomId'. Either include it or remove the dependency array.",["73"],"'settings' is defined but never used.","React Hook useEffect has missing dependencies: 'roomCode' and 'socket'. Either include them or remove the dependency array.",["74"],"React Hook useEffect has missing dependencies: 'history.location.state.clientId', 'setCurrentPlayer', 'setHostPlayer', 'setPlayers', and 'socket'. Either include them or remove the dependency array.",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [clientName]",{"range":"84","text":"85"},"Update the dependencies array to be: [match.params.roomId]",{"range":"86","text":"87"},"Update the dependencies array to be: [roomCode, socket]",{"range":"88","text":"89"},"Update the dependencies array to be: [history.location.state.clientId, players, setCurrentPlayer, setHostPlayer, setPlayers, socket]",{"range":"90","text":"91"},[487,489],"[clientName]",[694,696],"[match.params.roomId]",[1242,1244],"[roomCode, socket]",[1678,1687],"[history.location.state.clientId, players, setCurrentPlayer, setHostPlayer, setPlayers, socket]"]