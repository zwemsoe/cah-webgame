[{"/Users/zwe/Desktop/cah-webgame/ts-client/src/index.tsx":"1","/Users/zwe/Desktop/cah-webgame/ts-client/src/reportWebVitals.ts":"2","/Users/zwe/Desktop/cah-webgame/ts-client/src/App.tsx":"3","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Home.tsx":"4","/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Room.tsx":"5","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Navbar.tsx":"6","/Users/zwe/Desktop/cah-webgame/ts-client/src/hooks/useLocalStorage.ts":"7","/Users/zwe/Desktop/cah-webgame/ts-client/src/contexts/SocketContext.ts":"8","/Users/zwe/Desktop/cah-webgame/ts-client/src/utils/index.ts":"9","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Lobby.tsx":"10","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/GameRoom.tsx":"11","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/ScoreBoard.tsx":"12","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/Whitecard.tsx":"13","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/Blackcard.tsx":"14","/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/WinnerCard.tsx":"15","/Users/zwe/Desktop/cah-webgame/ts-client/src/constants.ts":"16"},{"size":500,"mtime":1612988111843,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1612988111844,"results":"19","hashOfConfig":"18"},{"size":885,"mtime":1613776219508,"results":"20","hashOfConfig":"18"},{"size":2101,"mtime":1613776371338,"results":"21","hashOfConfig":"18"},{"size":3362,"mtime":1613776648189,"results":"22","hashOfConfig":"18"},{"size":1686,"mtime":1613776230916,"results":"23","hashOfConfig":"18"},{"size":597,"mtime":1612988111843,"results":"24","hashOfConfig":"18"},{"size":267,"mtime":1613802072952,"results":"25","hashOfConfig":"18"},{"size":489,"mtime":1613435812177,"results":"26","hashOfConfig":"18"},{"size":4184,"mtime":1613727176028,"results":"27","hashOfConfig":"18"},{"size":8697,"mtime":1613804557555,"results":"28","hashOfConfig":"18"},{"size":1485,"mtime":1613776301732,"results":"29","hashOfConfig":"18"},{"size":1596,"mtime":1613683579000,"results":"30","hashOfConfig":"18"},{"size":423,"mtime":1613776259436,"results":"31","hashOfConfig":"18"},{"size":499,"mtime":1613683579001,"results":"32","hashOfConfig":"18"},{"size":270,"mtime":1613723929577,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ce1qkj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/zwe/Desktop/cah-webgame/ts-client/src/index.tsx",[],["70","71"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/reportWebVitals.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/App.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Home.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/screens/Room.tsx",["72"],"import { useState, useEffect, useContext, useRef } from \"react\";\nimport Lobby from \"../components/Lobby\";\nimport { SocketContext } from \"../contexts/SocketContext\";\nimport GameRoom from \"../game/ui/GameRoom\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { User, Setting } from \"../interfaces\";\n\ninterface Props {\n  history: any;\n  match: any;\n}\n\nvar defaultSetting: Setting = {\n  rounds: 3,\n  toggleNSFW: false,\n};\n\nexport default function Room({ match, history }: Props) {\n  const roomCode = match.params.roomId;\n  const [users, setUsers] = useLocalStorage(`room-Users-${roomCode}`, []);\n  const [hostUser, setHostUser] = useLocalStorage(\n    `host-User-${roomCode}`,\n    undefined\n  );\n  const [currentUser, setCurrentUser] = useLocalStorage(\n    `current-User-${history.location.state.clientId}`,\n    undefined\n  );\n  const [lastJoined, setLastJoined] = useState<number | null>(null);\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n  const [setting, changeSetting] = useState<Setting>(defaultSetting);\n  const settingRef = useRef(defaultSetting);\n  settingRef.current = setting;\n  \n  const socket = useContext(SocketContext);\n\n  useEffect(() => {\n    socket.emit(\"get room users\", {\n      roomCode: roomCode,\n    });\n    socket.emit(\"get room setting\", { roomCode: roomCode });\n  }, [roomCode, socket]);\n\n  useEffect(() => {\n    socket.on(\"room status\", ({ clients }: { clients: User[] }) => {\n      setUsers(clients);\n      if (clients.length !== 0) {\n        setLastJoined(clients.length - 1);\n        setHostUser(clients[0]);\n        var id: string | undefined = history.location.state.clientId;\n        setCurrentUser(clients.find((client) => client.id === id));\n      }\n    });\n  }, [users, socket]);\n\n  useEffect(() => {\n    socket.on(\"setting update\", ({ settings }: { settings: Setting }) => {\n      if (hostUser && currentUser) {\n        if (hostUser.id !== currentUser.id) {\n          changeSetting(settings);\n        }\n      }\n    });\n    socket.on(\"game start update\", () => {\n      setGameStarted(true);\n    });\n  });\n\n  const handleSetting = (e: any) => {\n    const { name, value, checked } = e.target;\n    const parse_value = parseInt(value);\n    if(checked !== undefined){\n      changeSetting((prevState) => ({\n        ...prevState,\n        toggleNSFW: checked,\n      }));\n    } else {\n      changeSetting((prevState) => ({\n        ...prevState,\n        [name]: parse_value,\n      }));\n    }\n    setTimeout(() => {\n      socket.emit(\"change setting\", {\n        settings: settingRef.current,\n        roomCode: roomCode,\n      });\n    }, 500);\n  };\n\n  const handleStartGame = () => {\n    if(users.length > 1){\n      setGameStarted(true);\n      socket.emit(\"start game\", { roomCode: roomCode });\n      socket.emit(\"game state init\", { roomCode: roomCode });\n    } else {\n      alert(\"Not enough players.\")\n    }\n  };\n  \n\n  return (\n    <>\n      {gameStarted ? (\n        <GameRoom currentUser = {currentUser} roomCode = {roomCode} setting = {settingRef.current} history={history}/>\n      ) : (\n        <Lobby\n          setting={setting}\n          handleSetting={handleSetting}\n          players={users}\n          hostPlayer={hostUser}\n          currentPlayer={currentUser}\n          lastJoined={lastJoined}\n          handleStartGame={handleStartGame}\n          match={match}\n        />\n      )}\n    </>\n  );\n}\n","/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Navbar.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/hooks/useLocalStorage.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/contexts/SocketContext.ts",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/utils/index.ts",[],["73","74"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/components/Lobby.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/GameRoom.tsx",["75"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/ScoreBoard.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/Whitecard.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/Blackcard.tsx",[],"/Users/zwe/Desktop/cah-webgame/ts-client/src/game/ui/WinnerCard.tsx",[],["76","77"],"/Users/zwe/Desktop/cah-webgame/ts-client/src/constants.ts",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":54,"column":6,"nodeType":"84","endLine":54,"endColumn":21,"suggestions":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"82","severity":1,"message":"88","line":129,"column":6,"nodeType":"84","endLine":129,"endColumn":15,"suggestions":"89"},{"ruleId":"78","replacedBy":"90"},{"ruleId":"80","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history.location.state.clientId', 'setCurrentUser', 'setHostUser', and 'setUsers'. Either include them or remove the dependency array.","ArrayExpression",["94"],["92"],["93"],"React Hook useEffect has missing dependencies: 'extractCurrentPlayer', 'extractPlayerById', 'props.setting.rounds', and 'socket'. Either include them or remove the dependency array.",["95"],["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [users, socket, setUsers, setHostUser, history.location.state.clientId, setCurrentUser]",{"range":"100","text":"101"},"Update the dependencies array to be: [extractCurrentPlayer, extractPlayerById, players, props.setting.rounds, socket]",{"range":"102","text":"103"},[1728,1743],"[users, socket, setUsers, setHostUser, history.location.state.clientId, setCurrentUser]",[3805,3814],"[extractCurrentPlayer, extractPlayerById, players, props.setting.rounds, socket]"]